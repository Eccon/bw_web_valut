{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/connectors/duo.ts","webpack:///./node_modules/duo_web_sdk/index.js"],"names":["enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","getQsParam","name","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","document","addEventListener","event","frameElement","createElement","setAttribute","setFrameHeight","body","appendChild","hostParam","requestParam","style","height","innerHeight","DuoWebSDK","init","iframe","host","sig_request","submit_callback","form","data","invokeCSharpAction","err","invokeCSCode","elements","sig_response","onresize","iframeId","postAction","postArgument","duoSig","appSig","submitCallback","DUO_MESSAGE_FORMAT","DUO_ERROR_FORMAT","DUO_OPEN_WINDOW_FORMAT","VALID_OPEN_WINDOW_DOMAINS","initializeStatefulVariables","undefined","throwError","message","Error","getDataAttribute","element","dataset","getAttribute","toLowerCase","on","context","fallbackEvent","callback","attachEvent","off","removeEventListener","detachEvent","onReady","offReady","parseSigRequest","sig","indexOf","split","length","sigParts","sigRequest","onDOMReady","getElementById","ready","isDuoMessage","Boolean","origin","match","onReceivedMessage","substring","parser","protocol","i","hostname","endsWith","isValidUrlToOpen","open","doPostBack","src","encodeURIComponent","join","response","input","type","parentElement","insertBefore","nextSibling","method","action","submit","options","post_action","post_argument","tagName","_onReady","_parseSigRequest","_isDuoMessage","_doPostBack"],"mappings":"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","file":"connectors/duo.cd3fdd91e1a63cf3ead5.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1031);\n","import * as DuoWebSDK from 'duo_web_sdk';\n\n// tslint:disable-next-line\nrequire('./duo.scss');\n\ndocument.addEventListener('DOMContentLoaded', (event) => {\n    const frameElement = document.createElement('iframe');\n    frameElement.setAttribute('id', 'duo_iframe');\n    setFrameHeight();\n    document.body.appendChild(frameElement);\n\n    const hostParam = getQsParam('host');\n    const requestParam = getQsParam('request');\n    DuoWebSDK.init({\n        iframe: 'duo_iframe',\n        host: hostParam,\n        sig_request: requestParam,\n        submit_callback: (form: any) => {\n            invokeCSCode(form.elements.sig_response.value);\n        },\n    });\n\n    window.onresize = setFrameHeight;\n\n    function setFrameHeight() {\n        frameElement.style.height = window.innerHeight + 'px';\n    }\n});\n\nfunction getQsParam(name: string) {\n    const url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n    const results = regex.exec(url);\n\n    if (!results) {\n        return null;\n    }\n    if (!results[2]) {\n        return '';\n    }\n\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction invokeCSCode(data: string) {\n    try {\n        (window as any).invokeCSharpAction(data);\n    } catch (err) { }\n}\n","/**\n * Duo Web SDK v2\n * Copyright 2017, Duo Security\n */\n\n(function (root, factory) {\n    /*eslint-disable */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    /*eslint-enable */\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        var Duo = factory();\n        // If the Javascript was loaded via a script tag, attempt to autoload\n        // the frame.\n        Duo._onReady(Duo.init);\n\n        // Attach Duo to the `window` object\n        root.Duo = Duo;\n  }\n}(this, function() {\n    var DUO_MESSAGE_FORMAT = /^(?:AUTH|ENROLL)+\\|[A-Za-z0-9\\+\\/=]+\\|[A-Za-z0-9\\+\\/=]+$/;\n    var DUO_ERROR_FORMAT = /^ERR\\|[\\w\\s\\.\\(\\)]+$/;\n    var DUO_OPEN_WINDOW_FORMAT = /^DUO_OPEN_WINDOW\\|/;\n    var VALID_OPEN_WINDOW_DOMAINS = [\n        'duo.com',\n        'duosecurity.com',\n        'duomobile.s3-us-west-1.amazonaws.com'\n    ];\n\n    var iframeId,\n        postAction,\n        postArgument,\n        host,\n        sigRequest,\n        duoSig,\n        appSig,\n        iframe,\n        submitCallback;\n\n    // We use this function instead of setting initial values in the var\n    // declarations to make sure the initial values and subsequent\n    // re-initializations are always the same.\n    initializeStatefulVariables();\n\n    /**\n     * Set local variables to whatever they should be before you call init().\n     */\n    function initializeStatefulVariables() {\n        iframeId = 'duo_iframe';\n        postAction = '';\n        postArgument = 'sig_response';\n        host = undefined;\n        sigRequest = undefined;\n        duoSig = undefined;\n        appSig = undefined;\n        iframe = undefined;\n        submitCallback = undefined;\n    }\n\n    function throwError(message, url) {\n        throw new Error(\n            'Duo Web SDK error: ' + message +\n            (url ? ('\\n' + 'See ' + url + ' for more information') : '')\n        );\n    }\n\n    function hyphenize(str) {\n        return str.replace(/([a-z])([A-Z])/, '$1-$2').toLowerCase();\n    }\n\n    // cross-browser data attributes\n    function getDataAttribute(element, name) {\n        if ('dataset' in element) {\n            return element.dataset[name];\n        } else {\n            return element.getAttribute('data-' + hyphenize(name));\n        }\n    }\n\n    // cross-browser event binding/unbinding\n    function on(context, event, fallbackEvent, callback) {\n        if ('addEventListener' in window) {\n            context.addEventListener(event, callback, false);\n        } else {\n            context.attachEvent(fallbackEvent, callback);\n        }\n    }\n\n    function off(context, event, fallbackEvent, callback) {\n        if ('removeEventListener' in window) {\n            context.removeEventListener(event, callback, false);\n        } else {\n            context.detachEvent(fallbackEvent, callback);\n        }\n    }\n\n    function onReady(callback) {\n        on(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n\n    function offReady(callback) {\n        off(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n\n    function onMessage(callback) {\n        on(window, 'message', 'onmessage', callback);\n    }\n\n    function offMessage(callback) {\n        off(window, 'message', 'onmessage', callback);\n    }\n\n    /**\n     * Parse the sig_request parameter, throwing errors if the token contains\n     * a server error or if the token is invalid.\n     *\n     * @param {String} sig Request token\n     */\n    function parseSigRequest(sig) {\n        if (!sig) {\n            // nothing to do\n            return;\n        }\n\n        // see if the token contains an error, throwing it if it does\n        if (sig.indexOf('ERR|') === 0) {\n            throwError(sig.split('|')[1]);\n        }\n\n        // validate the token\n        if (sig.indexOf(':') === -1 || sig.split(':').length !== 2) {\n            throwError(\n                'Duo was given a bad token.  This might indicate a configuration ' +\n                'problem with one of Duo\\'s client libraries.',\n                'https://www.duosecurity.com/docs/duoweb#first-steps'\n            );\n        }\n\n        var sigParts = sig.split(':');\n\n        // hang on to the token, and the parsed duo and app sigs\n        sigRequest = sig;\n        duoSig = sigParts[0];\n        appSig = sigParts[1];\n\n        return {\n            sigRequest: sig,\n            duoSig: sigParts[0],\n            appSig: sigParts[1]\n        };\n    }\n\n    /**\n     * This function is set up to run when the DOM is ready, if the iframe was\n     * not available during `init`.\n     */\n    function onDOMReady() {\n        iframe = document.getElementById(iframeId);\n\n        if (!iframe) {\n            throw new Error(\n                'This page does not contain an iframe for Duo to use.' +\n                'Add an element like <iframe id=\"duo_iframe\"></iframe> ' +\n                'to this page.  ' +\n                'See https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe ' +\n                'for more information.'\n            );\n        }\n\n        // we've got an iframe, away we go!\n        ready();\n\n        // always clean up after yourself\n        offReady(onDOMReady);\n    }\n\n    /**\n     * Validate that a MessageEvent came from the Duo service, and that it\n     * is a properly formatted payload.\n     *\n     * The Google Chrome sign-in page injects some JS into pages that also\n     * make use of postMessage, so we need to do additional validation above\n     * and beyond the origin.\n     *\n     * @param {MessageEvent} event Message received via postMessage\n     */\n    function isDuoMessage(event) {\n        return Boolean(\n            event.origin === ('https://' + host) &&\n            typeof event.data === 'string' &&\n            (\n                event.data.match(DUO_MESSAGE_FORMAT) ||\n                event.data.match(DUO_ERROR_FORMAT) ||\n                event.data.match(DUO_OPEN_WINDOW_FORMAT)\n            )\n        );\n    }\n\n    /**\n     * Validate the request token and prepare for the iframe to become ready.\n     *\n     * All options below can be passed into an options hash to `Duo.init`, or\n     * specified on the iframe using `data-` attributes.\n     *\n     * Options specified using the options hash will take precedence over\n     * `data-` attributes.\n     *\n     * Example using options hash:\n     * ```javascript\n     * Duo.init({\n     *     iframe: \"some_other_id\",\n     *     host: \"api-main.duo.test\",\n     *     sig_request: \"...\",\n     *     post_action: \"/auth\",\n     *     post_argument: \"resp\"\n     * });\n     * ```\n     *\n     * Example using `data-` attributes:\n     * ```\n     * <iframe id=\"duo_iframe\"\n     *         data-host=\"api-main.duo.test\"\n     *         data-sig-request=\"...\"\n     *         data-post-action=\"/auth\"\n     *         data-post-argument=\"resp\"\n     *         >\n     * </iframe>\n     * ```\n     *\n     * @param {Object} options\n     * @param {String} options.iframe                         The iframe, or id of an iframe to set up\n     * @param {String} options.host                           Hostname\n     * @param {String} options.sig_request                    Request token\n     * @param {String} [options.post_action='']               URL to POST back to after successful auth\n     * @param {String} [options.post_argument='sig_response'] Parameter name to use for response token\n     * @param {Function} [options.submit_callback]            If provided, duo will not submit the form instead execute\n     *                                                        the callback function with reference to the \"duo_form\" form object\n     *                                                        submit_callback can be used to prevent the webpage from reloading.\n     */\n    function init(options) {\n        // If init() is called more than once we have to reset all the local\n        // variables to ensure init() will work the same way every time. This\n        // helps people making single page applications. SPAs may periodically\n        // remove the iframe and add a new one that has to be initialized.\n        initializeStatefulVariables();\n\n        if (options) {\n            if (options.host) {\n                host = options.host;\n            }\n\n            if (options.sig_request) {\n                parseSigRequest(options.sig_request);\n            }\n\n            if (options.post_action) {\n                postAction = options.post_action;\n            }\n\n            if (options.post_argument) {\n                postArgument = options.post_argument;\n            }\n\n            if (options.iframe) {\n                if (options.iframe.tagName) {\n                    iframe = options.iframe;\n                } else if (typeof options.iframe === 'string') {\n                    iframeId = options.iframe;\n                }\n            }\n\n            if (typeof options.submit_callback === 'function') {\n                submitCallback = options.submit_callback;\n            }\n        }\n\n        // if we were given an iframe, no need to wait for the rest of the DOM\n        if (iframe) {\n            ready();\n        } else {\n            // try to find the iframe in the DOM\n            iframe = document.getElementById(iframeId);\n\n            // iframe is in the DOM, away we go!\n            if (iframe) {\n                ready();\n            } else {\n                // wait until the DOM is ready, then try again\n                onReady(onDOMReady);\n            }\n        }\n\n        // always clean up after yourself!\n        offReady(init);\n    }\n\n    /**\n     * This function is called when a message was received from another domain\n     * using the `postMessage` API.  Check that the event came from the Duo\n     * service domain, and that the message is a properly formatted payload,\n     * then perform the post back to the primary service.\n     *\n     * @param event Event object (contains origin and data)\n     */\n    function onReceivedMessage(event) {\n        if (isDuoMessage(event)) {\n            if (event.data.match(DUO_OPEN_WINDOW_FORMAT)) {\n                var url = event.data.substring(\"DUO_OPEN_WINDOW|\".length);\n                if (isValidUrlToOpen(url)) {\n                    // Open the URL that comes after the DUO_WINDOW_OPEN token.\n                    window.open(url, \"_self\");\n                }\n            }\n            else {\n                // the event came from duo, do the post back\n                doPostBack(event.data);\n\n                // always clean up after yourself!\n                offMessage(onReceivedMessage);\n            }\n        }\n    }\n\n    /**\n     * Validate that this passed in URL is one that we will actually allow to\n     * be opened.\n     * @param url String URL that the message poster wants to open\n     * @returns {boolean} true if we allow this url to be opened in the window\n     */\n    function isValidUrlToOpen(url) {\n        if (!url) {\n            return false;\n        }\n\n        var parser = document.createElement('a');\n        parser.href = url;\n\n        if (parser.protocol === \"duotrustedendpoints:\") {\n            return true;\n        } else if (parser.protocol !== \"https:\") {\n            return false;\n        }\n\n        for (var i = 0; i < VALID_OPEN_WINDOW_DOMAINS.length; i++) {\n           if (parser.hostname.endsWith(\".\" + VALID_OPEN_WINDOW_DOMAINS[i]) ||\n                   parser.hostname === VALID_OPEN_WINDOW_DOMAINS[i]) {\n               return true;\n           }\n        }\n        return false;\n    }\n\n    /**\n     * Point the iframe at Duo, then wait for it to postMessage back to us.\n     */\n    function ready() {\n        if (!host) {\n            host = getDataAttribute(iframe, 'host');\n\n            if (!host) {\n                throwError(\n                    'No API hostname is given for Duo to use.  Be sure to pass ' +\n                    'a `host` parameter to Duo.init, or through the `data-host` ' +\n                    'attribute on the iframe element.',\n                    'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe'\n                );\n            }\n        }\n\n        if (!duoSig || !appSig) {\n            parseSigRequest(getDataAttribute(iframe, 'sigRequest'));\n\n            if (!duoSig || !appSig) {\n                throwError(\n                    'No valid signed request is given.  Be sure to give the ' +\n                    '`sig_request` parameter to Duo.init, or use the ' +\n                    '`data-sig-request` attribute on the iframe element.',\n                    'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe'\n                );\n            }\n        }\n\n        // if postAction/Argument are defaults, see if they are specified\n        // as data attributes on the iframe\n        if (postAction === '') {\n            postAction = getDataAttribute(iframe, 'postAction') || postAction;\n        }\n\n        if (postArgument === 'sig_response') {\n            postArgument = getDataAttribute(iframe, 'postArgument') || postArgument;\n        }\n\n        // point the iframe at Duo\n        iframe.src = [\n            'https://', host, '/frame/web/v1/auth?tx=', duoSig,\n            '&parent=', encodeURIComponent(document.location.href),\n            '&v=2.7'\n        ].join('');\n\n        // listen for the 'message' event\n        onMessage(onReceivedMessage);\n    }\n\n    /**\n     * We received a postMessage from Duo.  POST back to the primary service\n     * with the response token, and any additional user-supplied parameters\n     * given in form#duo_form.\n     */\n    function doPostBack(response) {\n        // create a hidden input to contain the response token\n        var input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = postArgument;\n        input.value = response + ':' + appSig;\n\n        // user may supply their own form with additional inputs\n        var form = document.getElementById('duo_form');\n\n        // if the form doesn't exist, create one\n        if (!form) {\n            form = document.createElement('form');\n\n            // insert the new form after the iframe\n            iframe.parentElement.insertBefore(form, iframe.nextSibling);\n        }\n\n        // make sure we are actually posting to the right place\n        form.method = 'POST';\n        form.action = postAction;\n\n        // add the response token input to the form\n        form.appendChild(input);\n\n        // away we go!\n        if (typeof submitCallback === \"function\") {\n            submitCallback.call(null, form);\n        } else {\n            form.submit();\n        }\n    }\n\n    return {\n        init: init,\n        _onReady: onReady,\n        _parseSigRequest: parseSigRequest,\n        _isDuoMessage: isDuoMessage,\n        _doPostBack: doPostBack\n    };\n}));\n"],"sourceRoot":""}